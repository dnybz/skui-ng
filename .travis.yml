dist: xenial

language: cpp

# deploy filename
before_script:
 - REPOSITORY=`echo ${TRAVIS_REPO_SLUG} | cut -d/ -f2`
 - export DEPLOY_FILE_NAME=${REPOSITORY}_${TRAVIS_OS_NAME}-${TRAVIS_OSX_IMAGE:-$TRAVIS_COMPILER}_${TRAVIS_BRANCH}
 - PREBUILT_3RDPARTY_HASH=`git rev-parse --short=10 @:./3rdparty`
 - export PREBUILT_3RDPARTY_PACKAGE=3rdparty_${TRAVIS_OS_NAME}-${TRAVIS_OSX_IMAGE:-$TRAVIS_COMPILER}_${PREBUILT_3RDPARTY_HASH}
 - wget https://github.com/skui-org/3rdparty/releases/download/${PREBUILT_3RDPARTY_HASH}/${PREBUILT_3RDPARTY_PACKAGE}.tar.xz
 - tar -xf ${PREBUILT_3RDPARTY_PACKAGE}.tar.xz

# actual build script
script:
 - mkdir build
 - cd build
 - export CXXFLAGS=${CI_CXX_FLAGS} LDFLAGS=${CI_LDFLAGS}
 - cmake .. -G ${GENERATOR} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_BUILD_TYPE=${CONFIGURATION} -DSKUI_USE_PREBUILT_3RDPARTY=ON -DSKUI_PREBUILT_3RDPARTY_PATH=`pwd`/../${PREBUILT_3RDPARTY_PACKAGE} -DCPACK_PACKAGE_FILE_NAME=${DEPLOY_FILE_NAME}
 - cmake --build .
 - ctest --output-on-failure

jobs:
  include:
    - os: linux
      compiler: gcc-7
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-8
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-9
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-9
        - CXX_COMPILER=g++-9
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-8
      if: repo = skui-org/skui
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - CONFIGURATION=Debug
        - CI_CXX_FLAGS=--coverage
        - CI_LDFLAGS=--coverage
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_lcov.sh 1.14
      after_success:
        - lcov --directory . --capture --output-file coverage.info --gcov-tool gcov-8 # capture coverage info
        - lcov --remove coverage.info '/usr/*' '*/tests/*' '*/tests/*' '*/3rdparty/*' --output-file coverage.info # filter out system and tests
        - lcov --list coverage.info # debug info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
    - os: linux
      compiler: clang-6.0
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-6.0
        - CXX_COMPILER=clang++-6.0
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-6.0
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 6.0.1 /usr
    - os: linux
      compiler: clang-7
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-7
        - CXX_COMPILER=clang++-7
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-7
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 7.1.0 /usr
    - os: linux
      compiler: clang-8
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-8
        - CXX_COMPILER=clang++-8
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 8.0.1 /usr
    - os: linux
      compiler: clang-9
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-9
        - CXX_COMPILER=clang++-9
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-9
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 9.0.1 /usr
    - os: linux
      compiler: clang-10
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-10
        - CXX_COMPILER=clang++-10
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-10
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 10.0.1 /usr
    - os: osx
      osx_image: xcode11.6
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang
        - CXX_COMPILER=clang++
        - MACOSX_DEPLOYMENT_TARGET=10.15
        - CONFIGURATION=Release
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Darwin
        - . ./ci/setup_ninja.sh 1.8.2 mac
    - os: osx
      osx_image: xcode12
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang
        - CXX_COMPILER=clang++
        - MACOSX_DEPLOYMENT_TARGET=10.15
        - CONFIGURATION=Release
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Darwin
        - . ./ci/setup_ninja.sh 1.8.2 mac
